package com.ublwarriors.guacamole.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class UserExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table guacamole_user
     *
     * @mbggenerated Wed Jul 13 15:15:04 CST 2016
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table guacamole_user
     *
     * @mbggenerated Wed Jul 13 15:15:04 CST 2016
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table guacamole_user
     *
     * @mbggenerated Wed Jul 13 15:15:04 CST 2016
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table guacamole_user
     *
     * @mbggenerated Wed Jul 13 15:15:04 CST 2016
     */
    public UserExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table guacamole_user
     *
     * @mbggenerated Wed Jul 13 15:15:04 CST 2016
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table guacamole_user
     *
     * @mbggenerated Wed Jul 13 15:15:04 CST 2016
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table guacamole_user
     *
     * @mbggenerated Wed Jul 13 15:15:04 CST 2016
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table guacamole_user
     *
     * @mbggenerated Wed Jul 13 15:15:04 CST 2016
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table guacamole_user
     *
     * @mbggenerated Wed Jul 13 15:15:04 CST 2016
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table guacamole_user
     *
     * @mbggenerated Wed Jul 13 15:15:04 CST 2016
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table guacamole_user
     *
     * @mbggenerated Wed Jul 13 15:15:04 CST 2016
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table guacamole_user
     *
     * @mbggenerated Wed Jul 13 15:15:04 CST 2016
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table guacamole_user
     *
     * @mbggenerated Wed Jul 13 15:15:04 CST 2016
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table guacamole_user
     *
     * @mbggenerated Wed Jul 13 15:15:04 CST 2016
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table guacamole_user
     *
     * @mbggenerated Wed Jul 13 15:15:04 CST 2016
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        protected void addCriterionForJDBCTime(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Time(value.getTime()), property);
        }

        protected void addCriterionForJDBCTime(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Time> timeList = new ArrayList<java.sql.Time>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                timeList.add(new java.sql.Time(iter.next().getTime()));
            }
            addCriterion(condition, timeList, property);
        }

        protected void addCriterionForJDBCTime(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Time(value1.getTime()), new java.sql.Time(value2.getTime()), property);
        }

        public Criteria andUserIdIsNull() {
            addCriterion("user_id is null");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNotNull() {
            addCriterion("user_id is not null");
            return (Criteria) this;
        }

        public Criteria andUserIdEqualTo(Integer value) {
            addCriterion("user_id =", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotEqualTo(Integer value) {
            addCriterion("user_id <>", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThan(Integer value) {
            addCriterion("user_id >", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("user_id >=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThan(Integer value) {
            addCriterion("user_id <", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThanOrEqualTo(Integer value) {
            addCriterion("user_id <=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdIn(List<Integer> values) {
            addCriterion("user_id in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotIn(List<Integer> values) {
            addCriterion("user_id not in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdBetween(Integer value1, Integer value2) {
            addCriterion("user_id between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotBetween(Integer value1, Integer value2) {
            addCriterion("user_id not between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andUsernameIsNull() {
            addCriterion("username is null");
            return (Criteria) this;
        }

        public Criteria andUsernameIsNotNull() {
            addCriterion("username is not null");
            return (Criteria) this;
        }

        public Criteria andUsernameEqualTo(String value) {
            addCriterion("username =", value, "username");
            return (Criteria) this;
        }

        public Criteria andUsernameNotEqualTo(String value) {
            addCriterion("username <>", value, "username");
            return (Criteria) this;
        }

        public Criteria andUsernameGreaterThan(String value) {
            addCriterion("username >", value, "username");
            return (Criteria) this;
        }

        public Criteria andUsernameGreaterThanOrEqualTo(String value) {
            addCriterion("username >=", value, "username");
            return (Criteria) this;
        }

        public Criteria andUsernameLessThan(String value) {
            addCriterion("username <", value, "username");
            return (Criteria) this;
        }

        public Criteria andUsernameLessThanOrEqualTo(String value) {
            addCriterion("username <=", value, "username");
            return (Criteria) this;
        }

        public Criteria andUsernameLike(String value) {
            addCriterion("username like", value, "username");
            return (Criteria) this;
        }

        public Criteria andUsernameNotLike(String value) {
            addCriterion("username not like", value, "username");
            return (Criteria) this;
        }

        public Criteria andUsernameIn(List<String> values) {
            addCriterion("username in", values, "username");
            return (Criteria) this;
        }

        public Criteria andUsernameNotIn(List<String> values) {
            addCriterion("username not in", values, "username");
            return (Criteria) this;
        }

        public Criteria andUsernameBetween(String value1, String value2) {
            addCriterion("username between", value1, value2, "username");
            return (Criteria) this;
        }

        public Criteria andUsernameNotBetween(String value1, String value2) {
            addCriterion("username not between", value1, value2, "username");
            return (Criteria) this;
        }

        public Criteria andDisabledIsNull() {
            addCriterion("disabled is null");
            return (Criteria) this;
        }

        public Criteria andDisabledIsNotNull() {
            addCriterion("disabled is not null");
            return (Criteria) this;
        }

        public Criteria andDisabledEqualTo(Boolean value) {
            addCriterion("disabled =", value, "disabled");
            return (Criteria) this;
        }

        public Criteria andDisabledNotEqualTo(Boolean value) {
            addCriterion("disabled <>", value, "disabled");
            return (Criteria) this;
        }

        public Criteria andDisabledGreaterThan(Boolean value) {
            addCriterion("disabled >", value, "disabled");
            return (Criteria) this;
        }

        public Criteria andDisabledGreaterThanOrEqualTo(Boolean value) {
            addCriterion("disabled >=", value, "disabled");
            return (Criteria) this;
        }

        public Criteria andDisabledLessThan(Boolean value) {
            addCriterion("disabled <", value, "disabled");
            return (Criteria) this;
        }

        public Criteria andDisabledLessThanOrEqualTo(Boolean value) {
            addCriterion("disabled <=", value, "disabled");
            return (Criteria) this;
        }

        public Criteria andDisabledIn(List<Boolean> values) {
            addCriterion("disabled in", values, "disabled");
            return (Criteria) this;
        }

        public Criteria andDisabledNotIn(List<Boolean> values) {
            addCriterion("disabled not in", values, "disabled");
            return (Criteria) this;
        }

        public Criteria andDisabledBetween(Boolean value1, Boolean value2) {
            addCriterion("disabled between", value1, value2, "disabled");
            return (Criteria) this;
        }

        public Criteria andDisabledNotBetween(Boolean value1, Boolean value2) {
            addCriterion("disabled not between", value1, value2, "disabled");
            return (Criteria) this;
        }

        public Criteria andExpiredIsNull() {
            addCriterion("expired is null");
            return (Criteria) this;
        }

        public Criteria andExpiredIsNotNull() {
            addCriterion("expired is not null");
            return (Criteria) this;
        }

        public Criteria andExpiredEqualTo(Boolean value) {
            addCriterion("expired =", value, "expired");
            return (Criteria) this;
        }

        public Criteria andExpiredNotEqualTo(Boolean value) {
            addCriterion("expired <>", value, "expired");
            return (Criteria) this;
        }

        public Criteria andExpiredGreaterThan(Boolean value) {
            addCriterion("expired >", value, "expired");
            return (Criteria) this;
        }

        public Criteria andExpiredGreaterThanOrEqualTo(Boolean value) {
            addCriterion("expired >=", value, "expired");
            return (Criteria) this;
        }

        public Criteria andExpiredLessThan(Boolean value) {
            addCriterion("expired <", value, "expired");
            return (Criteria) this;
        }

        public Criteria andExpiredLessThanOrEqualTo(Boolean value) {
            addCriterion("expired <=", value, "expired");
            return (Criteria) this;
        }

        public Criteria andExpiredIn(List<Boolean> values) {
            addCriterion("expired in", values, "expired");
            return (Criteria) this;
        }

        public Criteria andExpiredNotIn(List<Boolean> values) {
            addCriterion("expired not in", values, "expired");
            return (Criteria) this;
        }

        public Criteria andExpiredBetween(Boolean value1, Boolean value2) {
            addCriterion("expired between", value1, value2, "expired");
            return (Criteria) this;
        }

        public Criteria andExpiredNotBetween(Boolean value1, Boolean value2) {
            addCriterion("expired not between", value1, value2, "expired");
            return (Criteria) this;
        }

        public Criteria andAccessWindowStartIsNull() {
            addCriterion("access_window_start is null");
            return (Criteria) this;
        }

        public Criteria andAccessWindowStartIsNotNull() {
            addCriterion("access_window_start is not null");
            return (Criteria) this;
        }

        public Criteria andAccessWindowStartEqualTo(Date value) {
            addCriterionForJDBCTime("access_window_start =", value, "accessWindowStart");
            return (Criteria) this;
        }

        public Criteria andAccessWindowStartNotEqualTo(Date value) {
            addCriterionForJDBCTime("access_window_start <>", value, "accessWindowStart");
            return (Criteria) this;
        }

        public Criteria andAccessWindowStartGreaterThan(Date value) {
            addCriterionForJDBCTime("access_window_start >", value, "accessWindowStart");
            return (Criteria) this;
        }

        public Criteria andAccessWindowStartGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCTime("access_window_start >=", value, "accessWindowStart");
            return (Criteria) this;
        }

        public Criteria andAccessWindowStartLessThan(Date value) {
            addCriterionForJDBCTime("access_window_start <", value, "accessWindowStart");
            return (Criteria) this;
        }

        public Criteria andAccessWindowStartLessThanOrEqualTo(Date value) {
            addCriterionForJDBCTime("access_window_start <=", value, "accessWindowStart");
            return (Criteria) this;
        }

        public Criteria andAccessWindowStartIn(List<Date> values) {
            addCriterionForJDBCTime("access_window_start in", values, "accessWindowStart");
            return (Criteria) this;
        }

        public Criteria andAccessWindowStartNotIn(List<Date> values) {
            addCriterionForJDBCTime("access_window_start not in", values, "accessWindowStart");
            return (Criteria) this;
        }

        public Criteria andAccessWindowStartBetween(Date value1, Date value2) {
            addCriterionForJDBCTime("access_window_start between", value1, value2, "accessWindowStart");
            return (Criteria) this;
        }

        public Criteria andAccessWindowStartNotBetween(Date value1, Date value2) {
            addCriterionForJDBCTime("access_window_start not between", value1, value2, "accessWindowStart");
            return (Criteria) this;
        }

        public Criteria andAccessWindowEndIsNull() {
            addCriterion("access_window_end is null");
            return (Criteria) this;
        }

        public Criteria andAccessWindowEndIsNotNull() {
            addCriterion("access_window_end is not null");
            return (Criteria) this;
        }

        public Criteria andAccessWindowEndEqualTo(Date value) {
            addCriterionForJDBCTime("access_window_end =", value, "accessWindowEnd");
            return (Criteria) this;
        }

        public Criteria andAccessWindowEndNotEqualTo(Date value) {
            addCriterionForJDBCTime("access_window_end <>", value, "accessWindowEnd");
            return (Criteria) this;
        }

        public Criteria andAccessWindowEndGreaterThan(Date value) {
            addCriterionForJDBCTime("access_window_end >", value, "accessWindowEnd");
            return (Criteria) this;
        }

        public Criteria andAccessWindowEndGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCTime("access_window_end >=", value, "accessWindowEnd");
            return (Criteria) this;
        }

        public Criteria andAccessWindowEndLessThan(Date value) {
            addCriterionForJDBCTime("access_window_end <", value, "accessWindowEnd");
            return (Criteria) this;
        }

        public Criteria andAccessWindowEndLessThanOrEqualTo(Date value) {
            addCriterionForJDBCTime("access_window_end <=", value, "accessWindowEnd");
            return (Criteria) this;
        }

        public Criteria andAccessWindowEndIn(List<Date> values) {
            addCriterionForJDBCTime("access_window_end in", values, "accessWindowEnd");
            return (Criteria) this;
        }

        public Criteria andAccessWindowEndNotIn(List<Date> values) {
            addCriterionForJDBCTime("access_window_end not in", values, "accessWindowEnd");
            return (Criteria) this;
        }

        public Criteria andAccessWindowEndBetween(Date value1, Date value2) {
            addCriterionForJDBCTime("access_window_end between", value1, value2, "accessWindowEnd");
            return (Criteria) this;
        }

        public Criteria andAccessWindowEndNotBetween(Date value1, Date value2) {
            addCriterionForJDBCTime("access_window_end not between", value1, value2, "accessWindowEnd");
            return (Criteria) this;
        }

        public Criteria andValidFromIsNull() {
            addCriterion("valid_from is null");
            return (Criteria) this;
        }

        public Criteria andValidFromIsNotNull() {
            addCriterion("valid_from is not null");
            return (Criteria) this;
        }

        public Criteria andValidFromEqualTo(Date value) {
            addCriterionForJDBCDate("valid_from =", value, "validFrom");
            return (Criteria) this;
        }

        public Criteria andValidFromNotEqualTo(Date value) {
            addCriterionForJDBCDate("valid_from <>", value, "validFrom");
            return (Criteria) this;
        }

        public Criteria andValidFromGreaterThan(Date value) {
            addCriterionForJDBCDate("valid_from >", value, "validFrom");
            return (Criteria) this;
        }

        public Criteria andValidFromGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("valid_from >=", value, "validFrom");
            return (Criteria) this;
        }

        public Criteria andValidFromLessThan(Date value) {
            addCriterionForJDBCDate("valid_from <", value, "validFrom");
            return (Criteria) this;
        }

        public Criteria andValidFromLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("valid_from <=", value, "validFrom");
            return (Criteria) this;
        }

        public Criteria andValidFromIn(List<Date> values) {
            addCriterionForJDBCDate("valid_from in", values, "validFrom");
            return (Criteria) this;
        }

        public Criteria andValidFromNotIn(List<Date> values) {
            addCriterionForJDBCDate("valid_from not in", values, "validFrom");
            return (Criteria) this;
        }

        public Criteria andValidFromBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("valid_from between", value1, value2, "validFrom");
            return (Criteria) this;
        }

        public Criteria andValidFromNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("valid_from not between", value1, value2, "validFrom");
            return (Criteria) this;
        }

        public Criteria andValidUntilIsNull() {
            addCriterion("valid_until is null");
            return (Criteria) this;
        }

        public Criteria andValidUntilIsNotNull() {
            addCriterion("valid_until is not null");
            return (Criteria) this;
        }

        public Criteria andValidUntilEqualTo(Date value) {
            addCriterionForJDBCDate("valid_until =", value, "validUntil");
            return (Criteria) this;
        }

        public Criteria andValidUntilNotEqualTo(Date value) {
            addCriterionForJDBCDate("valid_until <>", value, "validUntil");
            return (Criteria) this;
        }

        public Criteria andValidUntilGreaterThan(Date value) {
            addCriterionForJDBCDate("valid_until >", value, "validUntil");
            return (Criteria) this;
        }

        public Criteria andValidUntilGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("valid_until >=", value, "validUntil");
            return (Criteria) this;
        }

        public Criteria andValidUntilLessThan(Date value) {
            addCriterionForJDBCDate("valid_until <", value, "validUntil");
            return (Criteria) this;
        }

        public Criteria andValidUntilLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("valid_until <=", value, "validUntil");
            return (Criteria) this;
        }

        public Criteria andValidUntilIn(List<Date> values) {
            addCriterionForJDBCDate("valid_until in", values, "validUntil");
            return (Criteria) this;
        }

        public Criteria andValidUntilNotIn(List<Date> values) {
            addCriterionForJDBCDate("valid_until not in", values, "validUntil");
            return (Criteria) this;
        }

        public Criteria andValidUntilBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("valid_until between", value1, value2, "validUntil");
            return (Criteria) this;
        }

        public Criteria andValidUntilNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("valid_until not between", value1, value2, "validUntil");
            return (Criteria) this;
        }

        public Criteria andTimezoneIsNull() {
            addCriterion("timezone is null");
            return (Criteria) this;
        }

        public Criteria andTimezoneIsNotNull() {
            addCriterion("timezone is not null");
            return (Criteria) this;
        }

        public Criteria andTimezoneEqualTo(String value) {
            addCriterion("timezone =", value, "timezone");
            return (Criteria) this;
        }

        public Criteria andTimezoneNotEqualTo(String value) {
            addCriterion("timezone <>", value, "timezone");
            return (Criteria) this;
        }

        public Criteria andTimezoneGreaterThan(String value) {
            addCriterion("timezone >", value, "timezone");
            return (Criteria) this;
        }

        public Criteria andTimezoneGreaterThanOrEqualTo(String value) {
            addCriterion("timezone >=", value, "timezone");
            return (Criteria) this;
        }

        public Criteria andTimezoneLessThan(String value) {
            addCriterion("timezone <", value, "timezone");
            return (Criteria) this;
        }

        public Criteria andTimezoneLessThanOrEqualTo(String value) {
            addCriterion("timezone <=", value, "timezone");
            return (Criteria) this;
        }

        public Criteria andTimezoneLike(String value) {
            addCriterion("timezone like", value, "timezone");
            return (Criteria) this;
        }

        public Criteria andTimezoneNotLike(String value) {
            addCriterion("timezone not like", value, "timezone");
            return (Criteria) this;
        }

        public Criteria andTimezoneIn(List<String> values) {
            addCriterion("timezone in", values, "timezone");
            return (Criteria) this;
        }

        public Criteria andTimezoneNotIn(List<String> values) {
            addCriterion("timezone not in", values, "timezone");
            return (Criteria) this;
        }

        public Criteria andTimezoneBetween(String value1, String value2) {
            addCriterion("timezone between", value1, value2, "timezone");
            return (Criteria) this;
        }

        public Criteria andTimezoneNotBetween(String value1, String value2) {
            addCriterion("timezone not between", value1, value2, "timezone");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table guacamole_user
     *
     * @mbggenerated do_not_delete_during_merge Wed Jul 13 15:15:04 CST 2016
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table guacamole_user
     *
     * @mbggenerated Wed Jul 13 15:15:04 CST 2016
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}